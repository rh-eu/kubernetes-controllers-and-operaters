apiVersion: v1
kind: Namespace
metadata:
  # Create a namespace that we'll match on
  name: enforce-annotations
  labels:
    enforce-annotations: "true"
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: enforce-pod-annotations
  namespace: validation
webhooks:
  - name: mifomm.validation.svc
    sideEffects: None
    # "Equivalent" provides insurance against API version upgrades/changes - e.g.
    # extensions/v1beta1 Ingress -> networking.k8s.io/v1beta1 Ingress
    # matchPolicy: Equivalent
    rules:
      - apiGroups:
          - "*"
        apiVersions:
          - "*"
        operations:
          - "CREATE"
          - "UPDATE"
        resources:
          - "pods"
          - "deployments"
    namespaceSelector:
      matchExpressions:
        # Any Namespace with a label matching the below will have its
        # annotations validated by this admission controller
        - key: "enforce-annotations"
          operator: In
          values: ["true"]
    failurePolicy: Fail
    clientConfig:
      service:
        # This is the hostname our certificate needs in its Subject Alternative
        # Name array - name.namespace.svc
        # If the certificate does NOT have this name, TLS validation will fail.
        name: mifomm
        namespace: validation
        path: "/admission-control/enforce-pod-annotations"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lVT2FndjgzSllNTjBZWHVySXR2KzFSZFpJNFdrd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZERVNNQkFHQTFVRUF3d0pUV2xHYjAxTklFTkJNQjRYRFRJd01Ea3lNekUxTXpNeE0xb1hEVEl3TVRBeQpNekUxTXpNeE0xb3dGREVTTUJBR0ExVUVBd3dKVFdsR2IwMU5JRU5CTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBOEVqMUd3WnB0cVp2dGVSajBseXZqYy9DUW14dFVoemRUbGdOdnplM3BaRVEKYTJLV1RRVmt0SVhaVURFQy94bW1hVUswaUs2UkF2WFJoQ3gyOUpZMVpoM05NY0laVzBhVVlJM0xCakhnOHFqcgpBQlhkNkpqY0JVaEh5TE1OekY4MTY4akQwcmRYQWx2Z1ZOellrYVlYTmRtV1FpcmwzbHlCcEd6WlBIN25IVGhIClJNZERoRlo5UjgxY2VJVXVaeElzZUxUSmRXdExhMTV6VjVtd0wrMlducHJ4Y0xSQ1lPZk5oMHYyYWptdXNrQS8KMnVpRlpNZTdoQ3E1SFg4WGRtTXFvZXdneG9HSFE0bHZOLzlqSEFzeDUzRUN5SVBpZXN5NGZkMVRVR001cXh1SwpxcWkyNkxYdWpLS1VnWWgxNldNL0wrY210Y3NWcGxQWUlMTFBPZ2NmalFJREFRQUJvMU13VVRBZEJnTlZIUTRFCkZnUVV6SG4weFY5cmJaNlpaVWt5Q3RvZEd2dkdpdWd3SHdZRFZSMGpCQmd3Rm9BVXpIbjB4VjlyYlo2WlpVa3kKQ3RvZEd2dkdpdWd3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBY3FxTwpabDgzR1M4N3Z5ZmZjT3dmcFVlekMyUXRZS3Jrc210RmdwRWVCRWNkMFpVR2NKZE5EL0RpcTNVdXB0YmxhMXd2ClJwM0dXdldvRHYwcW4rKzJ5M2FoREtUempMOUFKY3cvSHUvbUpuVDFIV1I3ckxUbE1iYlcyaGdnSHFuUDZ1Z3QKTjZ0V1pGWFBIYlJXSWl1ckNDbXZCVkdBUFRJL0lhMW9HaUpWWE5aMVM2eXZZd1Q1cGFqeFFVazNwb2ZzQVFXZwpEVThjZ3BFa3FIQmNSV2JGZWlpTy9tWWtYNjhlcnk0YkF4ekVBUW5NT1JRTHMzVGhQcUc0SUxiaVYrVnZyZFNmCmhONSs1dWFWTHRPM2hvVVlQbVRmeHpBZ1EyL3VrQWY2eE1UbElJSXRrVEtvRFVNRVZXK1hHditLN2lnTjdzYXkKWjVYcFU1Wkx3QkhvdTd6eGRRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        
